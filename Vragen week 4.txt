Week 4 

Opdracht 1 

Waarom is de instantie variabele saldo protected gemaakt? Waarom is dat handig? 

 Als de variabele protected is kan de subklasse er altijd bij komen 

 

Opdracht 3 

a. Kun je een instantie maken van een interface via new? Leg uit waarom het logisch is dat het wel of niet kan. 

Je kan geen instantie maken van een interface, omdat een interface abstract is 

b. Herhaal de vorige vraag met abstracte klassen.  

Je kan ook geen instantie maken van abstracte klassen, zelfde reden 

c. Kan een klasse meerdere klassen overerven?  

Nee, meervoudige overerving is niet mogelijk  

d. Kan een klasse meerdere interfaces implementeren?  

Dat kan 

e. Kan een klasse tegelijk een klasse overerven en interfaces implementeren?  

Ja, dit kan 

f. Klopt de stelling dat elke methode in een interface abstract is? Licht je antwoord toe. 

Nee, defaultmethodes hebben wel een body 

g. Moet een klasse abstract zijn als minstens één methode abstract is? Licht je antwoord toe.  

Ja, een concrete klasse kan geen abstracte methoden bevatten 

h. Leg het begrip polymorfisme van klassen uit en geef twee voorbeelden (één met abstracte klassen en één met interfaces). 

Uitleg: In object georiënteerd programmeren wordt hiermee bedoeld: het gelijkvormig zijn van de interface van klassen en objecten, maar met verschillende implementaties. De gelijkvormigheid betreft dan voornamelijk het gebruik en de naamgeving van operaties (of methodes). (Bron: Wikipedia) 

 

Abstracte klassen: 

Interfaces: 

 

Opdracht 4 

a. Kan een klasse abstract zijn als geen enkele methode abstract is in die klasse? Probeer het eens uit. Leg uit waarom het logisch is dat dit wel of niet kan.  

Dit kan wel. Het kan nodig zijn dat er een standaard-uitvoer nodig is voor elke methode die in de superklasse staat. Bijvoorbeeld als elke childklasse de methoden in uit de superklasse op dezelfde manier uitvoert. 

 

b. Moet een subklasse van een abstracte klasse altijd alle abstracte methodes implementeren? Leg uit waarom het logisch is dat dit wel of niet kan.  

Als de subklasse niet abstract is moeten alle abstracte methodes geïmplementeerd worden. Als dit niet gebeurt dan kunnen er in de subklasse methodes aangeroepen worden die geen body hebben. 

 

c. Als een klasse niet alle methoden van een interface implementeert kun je iets doen om een (compiler) fout te voorkomen. Wat? Waarom is de oplossing logisch?  

De methoden kunnen private gemaakt worden. (Ik weet niet of dit echt het antwoord is en heb ook geen idee waarom het logisch zo zijn als dat wel zo is. 

 

d. Leg uit waarom het logisch is dat een instantie variabele niet abstract kan zijn.  

Een instantievariabele heeft geen body om weg te laten. 

 

e. (Uitdaging) Zoek uit wat een final methode is. Leg daarna uit waarom het logisch is dat een methode niet tegelijkertijd abstract en final kan zijn. 

Een methode abstract maken is alleen logisch als je diezelfde methode in een subklasse nog gaat implementeren en daarmee de methode in de superklasse override. Een final methode kan niet overriden worden. Dus dit werkt niet. 